version: 2
references:
  workspace_root: &workspace_root
                    /tmp/workspace

  attach_workspace: &attach_workspace
    attach_workspace:
      at: *workspace_root


jobs:

  build:
    docker:
      - image: circleci/openjdk:stretch

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}
            - maven-repo-v1-{{ .Branch }}-
            - maven-repo-v1-
      - run: mvn clean install -DskipTests=true -DfailIfNotTests=false

      - save_cache:
          paths:
            - ~/.m2
          key: maven-repo-v1-{{ .Branch }}-{{ checksum "pom.xml" }}

  test:
    docker:
      - image: circleci/openjdk:stretch
    steps:
      - checkout
      - run: mvn test -Dtest=org.testmonkeys.test.cucumber.spring.logback.TestRunner
      - run: mvn test -Dtest=org.testmonkeys.test.cucumber.spring.logback.TestOutput

  create-package:
    docker:
      - image: circleci/openjdk:stretch

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Update version as per tag
          command: |
            export MAVEN_RELEASE_VERSION="$(echo $CIRCLE_TAG | cut -c 2-)"
            mvn versions:set -DnewVersion=$MAVEN_RELEASE_VERSION -f pom.xml
            mvn versions:commit

      - run:
          name: Build packages
          command: |
            export MAVEN_RELEASE_VERSION="$(echo $CIRCLE_TAG | cut -c 2-)"
            mvn clean package -DskipTests=true
            mkdir ~/repo/releasePackage
            mkdir -p /tmp/workspace/release/jars
            mv ~/repo/target/*.jar /tmp/workspace/release/jars/
            export POM_NAME_1='/tmp/workspace/release/jars/cucumber-spring-logback-'
            export POM_NAME_2='.pom'
            export POM_FULL_NAME="$POM_NAME_1$MAVEN_RELEASE_VERSION$POM_NAME_2"
            cp ~/repo/pom.xml $POM_FULL_NAME

      - persist_to_workspace:
          root: *workspace_root
          paths:
            - release/jars/

      - store_artifacts:
          path: ~/repo/target

  bintray-upload:
    docker:
      - image: circleci/openjdk:stretch

    working_directory: ~/repo

    steps:
      - *attach_workspace

      - run:
          name: install Bintray CLI
          command: |
            cd /tmp
            sudo curl -fL https://getcli.jfrog.io | sh
      - run:
          name: upload artifacts to bintray
          command: |
            export MAVEN_RELEASE_VERSION="$(echo $CIRCLE_TAG | cut -c 2-)"
            export CSL_URL='testmonkeys/maven/cucumber-spring-logback/'
            export CSL_PACKAGE='org/testmonkeys/cucumber/spring/logback'
            export VCS_URL='https://github.com/TestMonkeys/cucumber-spring-logback.git'
            export BINTRAY_URL="$CSL_URL$MAVEN_RELEASE_VERSION"
            export SEPARATOR='/'
            export PATH="$CSL_PACKAGE$MAVEN_RELEASE_VERSION$SEPARATOR"
            /tmp/jfrog bt config --user=$BINTRAY_USER --key=$BINTRAY_API_KEY --licenses="Apache-2.0"
            /tmp/jfrog bt u "/tmp/workspace/release/jars/*" $BINTRAY_URL $PATH
            /tmp/jfrog bt gsv $BINTRAY_URL --passphrase=$BINTRAY_GPG_PWD
            /tmp/jfrog bt vp $BINTRAY_URL
      - run:
          name: Sync to Maven Central
          command: |
            sudo apt-get update
            sudo apt-get install gettext
            export MAVEN_RELEASE_VERSION="$(echo $CIRCLE_TAG | cut -c 2-)"
            echo '{"username": "$SONATYPE_USER","password": "$SONATYPE_PASSWORD","close": "1"}' > req.template
            envsubst < req.template > request
            sudo curl -u $BINTRAY_USER:$BINTRAY_API_KEY --header "Content-Type: application/json" --data '@./request' --request POST https://api.bintray.com/maven_central_sync/testmonkeys/maven/cucumber-spring-logback/versions/$MAVEN_RELEASE_VERSION
            rm request

workflows:
  version: 2

  build-then-test:
    jobs:
      - build
      - test:
          requires:
            - build


  release:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - create-package:
          requires:
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - bintray-upload:
          requires:
            - create-package
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/